TestCase subclass: #BandejaEntradaTest	instanceVariableNames: 'inbox bandejaCarga bandejaGestion archivo'	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!BandejaEntradaTest commentStamp: '<historical>' prior: 0!A BandejaEntradaTest is a test class for testing the behavior of BandejaEntrada!!BandejaEntradaTest methodsFor: 'running' stamp: 'AHTH 9/20/2021 13:20'!setUp	| tram1 doc11 docRepe doc12 plani1 plani2 doc21 doc22 transfer1 doc31 doc32 doc34 doc35 transfer2 doc36 doc37 doc38 transferNoValid doc39 |	super setUp.	inbox := BandejaEntrada new.	bandejaCarga := BandejaCarga new.	bandejaGestion := BandejaGestion new.	archivo := Archivo new.	tram1 := Tramite new.	tram1 descripcion: 'Trámite de prueba'		; nombrePersona: 'Juan Presenta'.	doc11 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla'		path: 'documentaciones/planillas/Planilla1234.pdf'.	docRepe := Documentacion		newTipo: 'PDF'		titulo: 'Planilla'		path: 'documentaciones/planillas/Planilla1234.pdf'.	doc12 := Documentacion		newTipo: 'JPG'		titulo: 'DNI Frente'		path: 'documentaciones/transferencia/dni43456789-frente.JPG'.	tram1 adjuntarDocumentacion: doc11.	tram1 adjuntarDocumentacion: docRepe.	tram1 adjuntarDocumentacion: doc12.	plani1 := PlanillaPartido new.	plani1		descripcion: 'Planilla de prueba';		nombrePersona: 'Juan Arbitro';		nroPartido: 1234.	plani2 := PlanillaPartido new.	plani2		descripcion: 'Planilla de prueba';		nombrePersona: 'Juan Arbitro';		nroPartido: 1234.	doc21 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla Club Loc'		path: 'documentaciones/planillas/Planilla-ptdo1234-club1.pdf'.	doc22 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla Club Vis'		path: 'documentaciones/planillas/Planilla-ptdo1234-club2.pdf'.	plani2		adjuntarDocumentacion: doc21;		adjuntarDocumentacion: doc22.	transfer1 := Transferencia new.	transfer1		descripcion: 'Transferencia de prueba';		nombrePersona: 'Juan Presenta';		club: 'Ranqueles';		nombreJugador: 'Philip';		dniJugador: 25123456.	doc31 := Documentacion		newTipo: 'JPG'		titulo: 'DNI Frente'		path: 'documentaciones/transferencias/DNI-25123456-frente.pdf'.	doc32 := Documentacion		newTipo: 'JPG'		titulo: 'DNI DORSO'		path: 'documentaciones/transferencias/DNI-25123456-dorso.pdf'.	doc34 := Documentacion		newTipo: 'PDF'		titulo: 'DNI Frente y DORSO'		path: 'documentaciones/transferencias/DNI-25123456-frenteYDorso.pdf'.	doc35 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla transfer'		path: 'documentaciones/transferencias/Planilla-transfer-25123456.pdf'.	transfer1		adjuntarDocumentacion: doc31;		adjuntarDocumentacion: doc32;		adjuntarDocumentacion: doc34;		adjuntarDocumentacion: doc35.	transfer2 := Transferencia new.	transfer2		descripcion: 'Transferencia de prueba';		nombrePersona: 'Juan Presenta';		club: 'Ranqueles';		nombreJugador: 'Nik';		dniJugador: 44321654.	doc36 := Documentacion		newTipo: 'JPG'		titulo: 'DNI Frente'		path: 'documentaciones/transferencias/DNI-44321654-frente.pdf'.	doc37 := Documentacion		newTipo: 'JPG'		titulo: 'DNI DORSO'		path: 'documentaciones/transferencias/DNI-44321654-dorso.pdf'.	doc38 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla transfer'		path: 'documentaciones/transferencias/Planilla-transfer-44321654.pdf'.	transfer2		adjuntarDocumentacion: doc36;		adjuntarDocumentacion: doc37;		adjuntarDocumentacion: doc38.	transferNoValid := Transferencia new.	transferNoValid		descripcion: 'Transferencia de prueba';		nombrePersona: 'Juan Presenta';		club: 'Pampas';		nombreJugador: 'Pelé';		dniJugador: 90000001.	doc39 := Documentacion		newTipo: 'PDF'		titulo: 'Documentacion Transfer'		path: 'documentaciones/Transferencias/Doc-90000001.pdf'.	transferNoValid adjuntarDocumentacion: doc39.	inbox aceptar: tram1.	"Directamente no cuenta por que nos Planilla o Transferencia"	inbox aceptar: plani1.	"Se acepta y se rechaza por no válida"	inbox aceptar: transfer1.	"Se acepta y es válido"	inbox aceptar: transferNoValid.	"Se acepta y se rechaza por no válido"	inbox aceptar: plani2.	"Se acepta y es válido"	inbox aceptar: transfer2.	"Se acepta y es válido"			bandejaGestion transferencias: inbox bandejaGestion.	bandejaCarga planillas: inbox bandejaCarga.	archivo archivarTramite: inbox archivo.! !!BandejaEntradaTest methodsFor: 'test' stamp: 'FS 9/12/2021 20:40'!testTramitesAceptados	self assert: inbox tramitesAceptados = 3 description: 'No está contando correctamente los trámites aceptados (ver setUp)'! !!BandejaEntradaTest methodsFor: 'test' stamp: 'AHNA 9/19/2021 21:46'!testNumeroSiguiente	self		assert: inbox numeroSiguiente = 6		description: 'El número siguiente no se incrementa correctamente'! !BandejaEntradaTest subclass: #BandejaCargaTest	instanceVariableNames: ''	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!BandejaCargaTest methodsFor: 'test' stamp: 'AHNA 9/19/2021 21:50'!testGetPartidoCargar	| planiVieja doc1 doc2 plani|		self assert: bandejaCarga getPartidoCargar nroTramite equals: 4.		planiVieja := PlanillaPartido new.	planiVieja descripcion: 'Planilla vieja'; nombrePersona: 'Pepe Arbitra'; nroPartido: 11.	planiVieja fecha: (Date newDay: 1 month: 1 year: 2021).	doc1 := Documentacion newTipo: 'PDF' titulo: 'Planilla Club Loc' path: 'documentaciones/planillas/Planilla-ptdo11-club1.pdf'.	doc2 := Documentacion newTipo: 'PDF' titulo: 'Planilla Club Vis' path: 'documentaciones/planillas/Planilla-ptdo11-club2.pdf'.	planiVieja adjuntarDocumentacion: doc1; adjuntarDocumentacion: doc2.	inbox aceptar: planiVieja.		self assert: bandejaCarga getPartidoCargar = planiVieja description: 'No restorna la planilla correcta'.	bandejaCarga procesarPartido: planiVieja.	self assert: bandejaCarga getPartidoCargar nroTramite equals: 4.		plani := bandejaCarga getPartidoCargar.	bandejaCarga procesarPartido: plani.		self assert: bandejaCarga getPartidoCargar equals: nil.! !!BandejaCargaTest methodsFor: 'test' stamp: 'FS 9/12/2021 21:31'!testProcesarPartido	| plani cantAProc |		cantAProc := bandejaCarga cantidadPlanillas.	plani := bandejaCarga getPartidoCargar.	bandejaCarga procesarPartido: plani.		self assert: bandejaCarga cantidadPlanillas equals: cantAProc - 1.	! !!BandejaCargaTest methodsFor: 'test' stamp: 'FS 9/12/2021 20:53'!testCantidadPlanillas	self assert: bandejaCarga cantidadPlanillas = 1 description: 'No informa correctamente la cantidad de planillas'	! !BandejaEntradaTest subclass: #BandejaGestionTest	instanceVariableNames: ''	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!BandejaGestionTest methodsFor: 'test' stamp: 'FS 9/12/2021 22:20'!testRechazarTransferenciaObservacion	| transfAux |	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion rechazarTransferencia: transfAux nroTramite observacion: 'Demasiado viejo para jugar'.		self assert: (transfAux asString includesSubstring: 'RECHAZADO') description: 'No cambió el estado o no lo muestra en el asString'.	self assert: (transfAux asString includesSubstring: 'viejo para jugar') description: 'No asignó la observación o no la muestra en el asString'.	! !!BandejaGestionTest methodsFor: 'test' stamp: 'AHTH 9/20/2021 12:18'!testAprobarTransferenciaMonto	| transfAux |	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion		rechazarTransferencia: transfAux nroTramite		observacion: 'Demasiado viejo para jugar'.	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion aprobarTransferencia: transfAux nroTramite monto: 12500.	self		assert: (transfAux asString includesSubstring: 'PROCESADO')		description: 'No cambió el estado o no lo muestra en el asString'.	self		assert: (transfAux asString includesSubstring: '12500')		description: 'No asignó el monto o no lo muestra en el asString'! !!BandejaGestionTest methodsFor: 'test' stamp: 'AHNA 9/19/2021 21:51'!testGetTransferenciaGestionar	| transfNew doc1 doc2 doc3 transfAux |	self		assert: bandejaGestion getTransferenciaGestionar nroTramite		equals: 2.	transfNew := Transferencia new.	transfNew		descripcion: 'Transferencia de prueba';		nombrePersona: 'Guido Presenta';		club: 'Ranqueles';		nombreJugador: 'Taro';		dniJugador: 43987654.	doc1 := Documentacion		newTipo: 'JPG'		titulo: 'DNI Frente'		path: 'documentaciones/transferencias/DNI-43987654-frente.pdf'.	doc2 := Documentacion		newTipo: 'JPG'		titulo: 'DNI DORSO'		path: 'documentaciones/transferencias/DNI-43987654-dorso.pdf'.	doc3 := Documentacion		newTipo: 'PDF'		titulo: 'Planilla transfer'		path: 'documentaciones/transferencias/Planilla-transfer-43987654.pdf'.	transfNew		adjuntarDocumentacion: doc1;		adjuntarDocumentacion: doc2;		adjuntarDocumentacion: doc3.	inbox aceptar: transfNew.	self		assert: bandejaGestion getTransferenciaGestionar nroTramite		equals: 2.	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion		rechazarTransferencia: transfAux nroTramite		observacion: 'Demasiado viejo para jugar'.	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion		aprobarTransferencia: transfAux nroTramite		monto: 12500.	transfAux := bandejaGestion getTransferenciaGestionar.	bandejaGestion		aprobarTransferencia: transfAux nroTramite		monto: 50000.	self assert: bandejaGestion getTransferenciaGestionar equals: nil! !!BandejaGestionTest methodsFor: 'test' stamp: 'FS 9/12/2021 21:45'!testCantidadTransferencias	self assert: bandejaGestion cantidadTransferencias = 2 description: 'No informa correctamente la cantidad de planillas'! !TestCase subclass: #DocumentacionTest	instanceVariableNames: 'doc1 doc2 doc3'	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!DocumentacionTest commentStamp: '<historical>' prior: 0!A DocumentacionTest is a test class for testing the behavior of Documentacion!!DocumentacionTest methodsFor: 'test' stamp: 'FS 9/12/2021 13:58'!testEqualsSign	self assert: (doc1 = doc1).	self assert: (doc1 = doc3) equals: false.	self assert: (doc1 = doc1).! !!DocumentacionTest methodsFor: 'test' stamp: 'FS 9/12/2021 15:56'!testAsString		self assert: ((doc1 asString) includesSubstring: 'PDF') description: 'No contiene el tipo'.	self assert: ((doc1 asString) includesSubstring: 'Planilla') description: 'No contiene el título'.	self assert: ((doc1 asString) includesSubstring: 'documentaciones/planillas/Planilla1234.pdf') description: 'No contiene el path'.! !!DocumentacionTest methodsFor: 'initialization' stamp: 'FS 9/12/2021 13:40'!initialize				doc1 := Documentacion newTipo: 'PDF' titulo: 'Planilla' path: 'documentaciones/planillas/Planilla1234.pdf'.		doc2 := Documentacion newTipo: 'PDF' titulo: 'Planilla' path: 'documentaciones/planillas/Planilla1234.pdf'.		doc3 := Documentacion newTipo: 'JPG' titulo: 'DNI Frente' path: 'documentaciones/transferencia/dni43456789-frente.JPG'! !TestCase subclass: #PlanillaPartidoTest	instanceVariableNames: 'plani1 doc1 doc2 plani2 plani3'	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!PlanillaPartidoTest commentStamp: '<historical>' prior: 0!A PlanillaPartidoTest is a test class for testing the behavior of PlanillaPartido!!PlanillaPartidoTest methodsFor: 'test' stamp: 'FS 9/12/2021 18:12'!testValidar	self deny: plani1 validar description: 'No se agregó el número de partido'.	self deny: plani2 validar description: 'No se agregaron las documentaciones'.	self assert: plani3 validar description: 'No validó una planilla válida'.	! !!PlanillaPartidoTest methodsFor: 'running' stamp: 'AHNA 9/16/2021 00:11'!setUp	super setUp.	plani1 := PlanillaPartido new.	plani1 descripcion: 'Planilla de prueba'; nombrePersona: 'Juan Arbitro'; nroPartido: 0.		plani2 := PlanillaPartido new.   plani2 descripcion: 'Planilla de prueba' ;nombrePersona: 'Juan Arbitro'; nroPartido: 1234.	plani3 := PlanillaPartido new.   plani3 descripcion: 'Planilla de prueba' ;nombrePersona: 'Juan Arbitro';nroPartido: 1234.	doc1 := Documentacion newTipo: 'PDF' titulo: 'Planilla Club Loc' path: 'documentaciones/planillas/Planilla-ptdo1234-club1.pdf'.		doc2 := Documentacion newTipo: 'PDF' titulo: 'Planilla Club Vis' path: 'documentaciones/planillas/Planilla-ptdo1234-club2.pdf'.		plani3 adjuntarDocumentacion: doc1.	plani3 adjuntarDocumentacion: doc2.		plani3 setNumero: 23.	! !TestCase subclass: #TramiteTest	instanceVariableNames: 'tram1 doc1 doc2 docRepe'	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!TramiteTest commentStamp: '<historical>' prior: 0!A TramiteTest is a test class for testing the behavior of Tramite!!TramiteTest methodsFor: 'running' stamp: 'AHNA 9/16/2021 00:08'!setUp	super setUp.	tram1 := Tramite new.	tram1 descripcion:'Trámite de prueba' ; nombrePersona: 'Juan Presenta'.		doc1:= Documentacion new.	doc1 newTipo: 'PDF' ; titulo: 'Planilla' ;path: 'documentaciones/planillas/Planilla1234.pdf'.		docRepe := Documentacion new.	docRepe newTipo: 'PDF' ; titulo: 'Planilla'; path: 'documentaciones/planillas/Planilla1234.pdf'.		doc2 := Documentacion new.	doc2 newTipo: 'JPG'; titulo: 'DNI Frente'; path: 'documentaciones/transferencia/dni43456789-frente.JPG'.! !!TramiteTest methodsFor: 'test' stamp: 'AHNA 9/17/2021 17:44'!testAsString	tram1 adjuntarDocumentacion: doc1.	tram1 adjuntarDocumentacion: doc2.	tram1 setNumero: -22.	self assert: ((tram1 asString) includesSubstring: tram1 descripcion) description: 'No contiene el la descripcion'.	self assert: ((tram1 asString) includesSubstring: tram1 nombrePersona) description: 'No contiene la persona'.	self assert: ((tram1 asString) includesSubstring: '-22') description: 'No contiene el número'.	self assert: ((tram1 asString) includesSubstring: tram1 fecha asString) description: 'No contiene la fecha'.	self assert: ((tram1 asString) includesSubstring: tram1 estado asString) description: 'No contiene el estado'.	self 		assert: ((tram1 asString) includesSubstring: 'documentaciones/planillas/Planilla1234.pdf') 		description: 'No contiene una de las documentaciones'.			self 		assert: ((tram1 asString) includesSubstring: 'documentaciones/transferencia/dni43456789-frente.JPG') 		description: 'No contiene una de las documentaciones'.		! !!TramiteTest methodsFor: 'test' stamp: 'FS 9/12/2021 16:13'!testSetNumero	tram1 setNumero: 22.	self assert: (tram1 nroTramite = 22) description: 'El número no se asignó correctamente'.! !!TramiteTest methodsFor: 'test' stamp: 'FS 9/12/2021 16:38'!testAdjuntarDocumentacion	self assert: (tram1 adjuntarDocumentacion: doc1) description: 'No adjuntó: ', doc1 asString.	self assert: (tram1 adjuntarDocumentacion: doc2) description: 'No adjuntó: ', doc2 asString.	self deny: (tram1 adjuntarDocumentacion: docRepe) description: 'Adjuntó documentación repetida'.		! !!TramiteTest methodsFor: 'test' stamp: 'FS 9/12/2021 16:44'!testValidar	self deny: tram1 validar description: 'Validó sin número ni documentaciones'.	tram1 adjuntarDocumentacion: doc1.	tram1 adjuntarDocumentacion: doc2.	self deny: tram1 validar description: 'Validó sin asignar número'.	tram1 setNumero: 22.	self assert: tram1 validar description: 'No validó trámite válido'.! !TestCase subclass: #TransferenciaTest	instanceVariableNames: 'transfer1 transferNoValid doc1 doc2 doc3 doc4 doc5 doc6 transfer2'	classVariableNames: ''	package: 'PPR-TP12021-Tests'!!TransferenciaTest commentStamp: '<historical>' prior: 0!A TransferenciaTest is a test class for testing the behavior of Transferencia!!TransferenciaTest methodsFor: 'test' stamp: 'FS 9/12/2021 19:26'!testRechazar	self deny: (transfer1 estado = 'RECHAZADO') description: 'Error el objeto estaba previamente aprobado'.	self assert: (transfer1 estado = 'PENDIENTE') description: 'Error el objeto no está en el estado de la precondición'.	transfer1 rechazar: 'Se rechaza por viejo, ya no sirve para jugar'.	self assert: (transfer1 estado = 'RECHAZADO') description: 'El estado no cambió correctamente'.	self assert: (transfer1 asString includesSubstring: 'ya no sirve para jugar') 		description: 'La observación no se asignó o no se ve en el asString'.! !!TransferenciaTest methodsFor: 'test' stamp: 'FS 9/12/2021 21:38'!testAprobar	self deny: (transfer2 estado = 'PROCESADO') description: 'Error el objeto estaba previamente aprobado'.	self assert: (transfer2 estado = 'PENDIENTE') description: 'Error el objeto no está en el estado de la precondición'.	transfer2 aprobar: 50000.	self assert: (transfer2 estado = 'PROCESADO') description: 'El estado no cambió correctamente'.	self assert: (transfer2 asString includesSubstring: '50000') description: 'El monto no se asignó o no se ve en el asString'.! !!TransferenciaTest methodsFor: 'test' stamp: 'FS 9/12/2021 19:03'!testValidar	|doc11 doc12|	self assert: transfer2 validar description: 'No validó una transferencia correcta.'.	self deny: transfer1 validar description: 'Validó una transferencia sin documentaciones correctas'.	doc11 := Documentacion newTipo: 'JPG' titulo: 'DNI Frente' path: 'documentaciones/transferencias/DNI-25123456-frente.pdf'.	doc12 := Documentacion newTipo: 'JPG' titulo: 'DNI DORSO' path: 'documentaciones/transferencias/DNI-25123456-dorso.pdf'.		transfer1 adjuntarDocumentacion: doc11; adjuntarDocumentacion: doc12.		self assert: transfer1 validar description: 'No validó una transferencia correcta.'.		self deny: transferNoValid validar description: 'Validó una transferencia sin con documentaciones inválidas'.! !!TransferenciaTest methodsFor: 'running' stamp: 'AHNA 9/16/2021 01:08'!setUp	super setUp.	transfer1 := Transferencia new.	transfer1 descripcion:  'Transferencia de prueba'; nombrePersona:  'Juan Presenta'; 		club: 'Ranqueles' ; nombreJugador: 'Philip' ; dniJugador: 25123456.			transfer2 := Transferencia new.	transfer2 descripcion: 'Transferencia de prueba'; nombrePersona: 'Juan Presenta' ;		club: 'Ranqueles'; nombreJugador: 'Nik' ;dniJugador: 44321654.	transferNoValid := Transferencia new.   transferNoValid descripcion: 'Transferencia de prueba'; nombrePersona: 'Juan Presenta';		club: 'Pampas'; nombreJugador: 'Pelé'; dniJugador: 90000001.	doc1 := Documentacion newTipo: 'JPG' titulo: 'DNI Frente' path: 'documentaciones/transferencias/DNI-44321654-frente.pdf'.	doc2 := Documentacion newTipo: 'JPG' titulo: 'DNI DORSO' path: 'documentaciones/transferencias/DNI-44321654-dorso.pdf'.	doc3 := Documentacion newTipo: 'PDF' titulo: 'Planilla transfer' path: 'documentaciones/transferencias/Planilla-transfer-44321654.pdf'.		doc4 := Documentacion newTipo: 'PDF' titulo: 'DNI Frente y DORSO' path: 'documentaciones/transferencias/DNI-25123456-frenteYDorso.pdf'.	doc5 := Documentacion newTipo: 'PDF' titulo: 'Planilla transfer' path: 'documentaciones/transferencias/Planilla-transfer-25123456.pdf'.	doc6 := Documentacion newTipo: 'PDF' titulo: 'Documentacion Transfer' path: 'documentaciones/Transferencias/Doc-90000001.pdf'.		transfer1 adjuntarDocumentacion: doc4; adjuntarDocumentacion: doc5.	transfer1 setNumero: 24.		transfer2 adjuntarDocumentacion: doc1; adjuntarDocumentacion: doc2; adjuntarDocumentacion: doc3.	transfer2 setNumero: 25.		transferNoValid adjuntarDocumentacion: doc6.	transferNoValid setNumero: 26.			! !