Object subclass: #Atencion	instanceVariableNames: 'codigo nombreMascota precioBase'	classVariableNames: ''	poolDictionaries: ''	category: 'PPRExamen21-02-2018'!!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!codigo	^ codigo! !!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!precioBase: anObject	precioBase := anObject! !!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!nombreMascota: anObject	nombreMascota := anObject! !!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!codigo: anObject	codigo := anObject! !!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!nombreMascota	^ nombreMascota! !!Atencion methodsFor: 'accessing' stamp: 'NLC 2/15/2018 00:13'!precioBase	^ precioBase! !!Atencion methodsFor: 'propios' stamp: 'NLC 2/15/2018 00:15'!asString	"devuelve los datos de la atención como un String"	^'Código: ',codigo asString,String cr,'Nombre de la mascota: ',nombreMascota asString,	String cr,'Precio base: $',precioBase asString.! !!Atencion methodsFor: 'propios' stamp: 'NLC 2/15/2018 00:16'!importeFinal	"calcula parcialmente el importe final de una atención"	^precioBase.! !!Atencion methodsFor: 'initialization' stamp: 'NLC 2/15/2018 01:18'!initialize	super initialize.	codigo := 1.	nombreMascota := 'Lara'.	precioBase := 0.! !Atencion subclass: #Medica	instanceVariableNames: 'honorarios derivada'	classVariableNames: ''	poolDictionaries: ''	category: 'PPRExamen21-02-2018'!!Medica methodsFor: 'propios' stamp: 'NLC 2/15/2018 01:47'!importeFinal	"completa la definición del precio final de una atención médica"	|final|	final:=super importeFinal + self honorarios.	self derivada ifTrue:[final:=super importeFinal + self honorarios*1.20]. 	^final.! !!Medica methodsFor: 'propios' stamp: 'NLC 2/15/2018 01:49'!asString	"devuelve todos los datos de una atención médica en forma de String"	^super asString,String cr,'Honorarios: ',self honorarios,String cr,'Atención derivada: ',self derivada.! !!Medica methodsFor: 'initialization' stamp: 'NLC 2/15/2018 01:19'!initialize	super initialize.	derivada := false.	honorarios := 0.! !!Medica methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:15'!derivada: anObject	derivada := anObject! !!Medica methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:15'!derivada	^ derivada! !!Medica methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:15'!honorarios: anObject	honorarios := anObject! !!Medica methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:15'!honorarios	^ honorarios! !Atencion subclass: #Peluqueria	instanceVariableNames: 'servicio'	classVariableNames: ''	poolDictionaries: ''	category: 'PPRExamen21-02-2018'!!Peluqueria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!servicio	^ servicio! !!Peluqueria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!servicio: anObject	servicio := anObject! !!Peluqueria methodsFor: 'initialization' stamp: 'NLC 2/15/2018 01:19'!initialize	super initialize.	servicio := 1.! !!Peluqueria methodsFor: 'propios' stamp: 'NLC 2/15/2018 01:50'!asString	"devuelve todos los datos de una atención de peluquería en forma de String"	^super asString,String cr,'Tipo de servicio: ',self servicio.! !!Peluqueria methodsFor: 'propios' stamp: 'NLC 2/15/2018 01:55'!importeFinal	"completa la definición del precio final de una atención de peluquería"	|importe|	importe:=0.	(self servicio = 1) ifTrue:[importe:=250].	(self servicio = 2) ifTrue:[importe:=400].	(self servicio = 3) ifTrue:[importe:=600].	^super importeFinal + importe.		         	! !Object subclass: #Veterinaria	instanceVariableNames: 'razonSocial atenciones'	classVariableNames: ''	poolDictionaries: ''	category: 'PPRExamen21-02-2018'!!Veterinaria methodsFor: 'propios' stamp: 'NLC 2/15/2018 02:14'!cantAtencionesMedicas: importe	"devuelve la cantidad de atenciones médicas cuyo importe final sea superior a importe"	^(self atenciones select:[:x | (x isKindOf:Medica) & (x importeFinal > importe).])size.	! !!Veterinaria methodsFor: 'propios' stamp: 'NLC 2/15/2018 01:58'!addAtencion:unaAtencion	"agrega una atención a la colección de la veterinaria"	(unaAtencion isKindOf: Atencion) ifTrue:[self atenciones add:unaAtencion].! !!Veterinaria methodsFor: 'propios' stamp: 'NLC 2/15/2018 02:22'!existeAtencion: codigo	"determina si existe o no alguna atención cuyo código sea igual a codigo"	|res existe|	existe:=false.	res:=self atenciones detect:[:x | x codigo = codigo] ifNone:[nil].	res isNotNil ifTrue:[existe:=true.].	^existe. ! !!Veterinaria methodsFor: 'propios' stamp: 'NLC 2/15/2018 02:06'!sumatoriaImporteTotal	"devuelve la sumatoria del importe final de todas las atenciones"	|suma|	suma:=0.	self atenciones do:[:x | suma:=suma + x importeFinal.].	^suma.! !!Veterinaria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!atenciones	^ atenciones! !!Veterinaria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!atenciones: anObject	atenciones := anObject! !!Veterinaria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!razonSocial	^ razonSocial! !!Veterinaria methodsFor: 'accessing' stamp: 'NLC 2/15/2018 01:16'!razonSocial: anObject	razonSocial := anObject! !!Veterinaria methodsFor: 'initialization' stamp: 'NLC 2/15/2018 01:18'!initialize	super initialize.	atenciones := OrderedCollection new.	razonSocial := 'PPR'.! !